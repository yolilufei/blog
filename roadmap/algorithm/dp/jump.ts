// 一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 10 级的台阶总共有多少种跳法。
// 解题思路
// 从后向前看
// 上第10阶台阶，有 2 种方式：从第8级上；从第9级上。 f(10) = max(f(9), f(8)) + 1
// 上第9级台阶，有 2 种方式，从第7级上；从第8级上。  f(9) = max(f(8), f(7)) + 1
// 。。。
// 上第2级台阶，有 2 种方式，从第1级上；从第0级上   f(2) = 2
// 上第1级台阶，有 1 种方式，从第1级上。找到锚点    f(1) = 1 
// 
const cache = {};
const jumpdp = (n) => {
    if (n === 1 || n === 2) {
        return n;
    }
    if (cache[n]) {
        return cache[n];
    } else {
        cache[n] = jumpdp(n-1) + jumpdp(n-2);
    }
     return cache[n];
}

// 给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。
// 输入：nums = [10,9,2,5,3,7,101,18]
// 输出：4
// 解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。



